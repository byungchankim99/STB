<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dispose</title>
    <link rel="stylesheet" href="stylesheets/dispose.css" />
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <div class="container">
      <div class="dispose_logo">dispose</div>

      <div class="imgs">
        <img src="img/image_4.svg" />
        <img src="img/image_5.svg" />
        <img src="img/image_6.svg" />
        <img src="img/image_7.svg" />
        <img src="img/image_8.svg" />
      </div>

      <button type="submit" class="finish">
        finish
      </button>
    </div>

    <nav>
      <a href="monitoring">monitoring</a>
      <a href="plogging">plogging</a>
      <a href="ranking">ranking</a>
    </nav>

    <script>
      var socket = io();
      socket.on("monitoring", (v) => {
        localStorage.setItem('currentWeight', v.value)
      });

      // this is just to separate codes from my eyes
      const buttonAction = document.querySelector('.finish')
      buttonAction.addEventListener('click', (e) => {

        // do you wanna really wanna finish this?
        let isTrue = confirm("Are you sure?")
        if(isTrue) {
          saveToDatabase()
          console.log(localStorage.getItem('currentWeight'))
        }
      })

      function saveToDatabase() {
        const currentWeight = localStorage.getItem('currentWeight')
        const initialWeight = localStorage.getItem('initialWeight')
        const qrCodeId = localStorage.getItem('qrcode')

        axios.post('/api/dispose', {
          currentWeight: currentWeight,
          initialWeight: initialWeight,
          qrcode: qrCodeId,
        })
        .then(function (response) {
          window.location.href = 'weight'
          localStorage.setItem('userData', JSON.stringify(response.data))
        })
        .catch(function (error) {
          console.log(error);
        });

      }

      function setInitialPositions() {
        const images = document.querySelectorAll(".imgs img");
        const radius = 150;
        const numImages = images.length;
        const angleIncrement = (360 / numImages) * (Math.PI / 180);
        let currentAngle = 0;

        for (let i = 0; i < numImages; i++) {
          const angle = currentAngle + i * angleIncrement;
          const x = Math.cos(angle) * radius;
          const y = Math.sin(angle) * radius;

          images[i].style.transform = `translate(${x}px, ${y}px)`;
        }

        setInterval(() => {
          currentAngle += 0.01; // 조절 가능한 값으로, 숫자를 늘리면 더 빠른 회전이 가능합니다.
          for (let i = 0; i < numImages; i++) {
            const angle = currentAngle + i * angleIncrement;
            const x = Math.cos(angle) * radius;
            const y = Math.sin(angle) * radius;
            images[i].style.transform = `translate(${x}px, ${y}px)`;
          }
        }, 16); // 16ms 간격으로 업데이트하여 부드럽게 움직입니다.
      }

      setInitialPositions();

      function navigateToRanking() {
        // 다른 페이지로 이동합니다.
        window.location.href = "weight";
      }
    </script>
  </body>
</html>
